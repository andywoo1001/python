pystock_xingAPI 모듈

버전: v0.0.4a

개요: python3에서 이베스트(구 이트레이드)증권의 xingAPI의 사용을 쉽게 하기 위한 라이브러리입니다.
※pystock_xingAPI은 최초 import시에 xingAPI의 *.res를 모두 찾아 로딩합니다. 따라서 pystock_xingAPI를 이용하여 조회TR 또는 실시간TR을 사용하기 위해서는 DevCenter에서 사용하고자 하는 res 파일을 모두 다운 받은 상태에서만 정상적으로 TR코드 이용이 가능합니다. 반대로, res파일을 모두 다운로드 받지않고 필요한 res파일만 받아 놓을 경우 pystock_xingAPI의 최초 import 성능이 개선 될 수 있습니다.

제공 클래스:
--------- class Xing ---------
Xing 클래스 개요:
pystock_xingAPI의 기본이되는 클래스로 xingAPI의 접속/계좌조회(xingAPI의 XASession객체), 조회 TR(xingAPI의 XAQuery객체), 실시간 TR(xingAPI의 XAReal객체)에 해당하는 모든 api의 기능을 통합하여 제공하는 클래스 입니다.

Xing 클래스 제공 메소드:

__init__: Xing클래스의 생성자로, 인자에 서버주소, 서버포트 등의 정보를 초기화 할 수 있습니다. with 구문을 통해 Xing 클래스의 객체를 생성 할 때에는 server_address, port, server_type, showcerterror, user, password, cert_password의 인자가 반드시 None이 아닌 값으로 입력 되어야하고, 이때 open메소드가 자동으로 호출되어 이베스트 서버와의 연결까지 된 상태로 객체가 반환 됩니다. with구문의 종료와 동시에 서버와의 접속이 자동으로 종료됩니다.
__init__ 메소드 인자 목록:
server_address=None(str): 이베스트 서버주소
port=None(int): 이베스트 서버 포트
server_type=None(int): 서버 종류를 나타내지만 사용하지않고 무시됩니다.
showcerterror=None(int): 공인인증과정에서 발생한 오류를 윈도우 다이얼로그로 보여줄지 유무를 지정합니다. 0:보이지않음, 1:보여짐
user=None(str): 이베스트 서버 로그인 아이디
password=None(str): 이베스트 서버 로그인 패스워드
cert_password=None(str): 공인인증서 패스워드(모의서버에서는 무시됩니다)
connect_retry_period=5(int): 접속 실패(사용 중 접속 끊어짐 포함)시 접속을 재시도 할 간격(초)
connect_max_retry=5(int): 연속 접속 실패 시 최대 재시도 횟수
login_timeout=15(int): 로그인 시도를 기다릴 최대 시간(초)
query_block_timeout=15(int): TR요청에 대해 기다릴 최대 시간(초)
logger=None(Logger): pystock_xingAPI 내부 로그를 출력할 로거, None으로 지정 시 pystock_xingAPI내부 로그는 출력되지 않습니다.

open: 이베스트 서버에 접속 합니다. 생성자와 인자가 동일하지만 server_address, port, server_type, showcerterror, user, password, cert_password인자는 필수로 입력해야 합니다. 단 with 구문을 통해 Xing 클래스의 객체를 생성하여 사용 할 경우 별도로 호출 할 필요가 없습니다.
open 메소드 인자 목록:
server_address(str): 이베스트 서버주소
port(int): 이베스트 서버 포트
server_type(int): 서버 종류를 나타내지만 사용하지않고 무시됩니다.
showcerterror(int): 공인인증과정에서 발생한 오류를 윈도우 다이얼로그로 보여줄지 유무를 지정합니다. 0:보이지않음, 1:보여짐
user(str): 이베스트 서버 로그인 아이디
password(str): 이베스트 서버 로그인 패스워드
cert_password(str): 공인인증서 패스워드(모의서버에서는 무시됩니다)
connect_retry_period=5(int): 접속 실패(사용 중 접속 끊어짐 포함)시 접속을 재시도 할 간격(초)
connect_max_retry=5(int): 연속 접속 실패 시 최대 재시도 횟수
login_timeout=15(int): 로그인 시도를 기다릴 최대 시간(초)
query_block_timeout=15(int): TR요청에 대해 기다릴 최대 시간(초)
logger=None(Logger): pystock_xingAPI 내부 로그를 출력할 로거, None으로 지정 시 pystock_xingAPI내부 로그는 출력되지 않습니다.

close: 이베스트 서버에서 로그아웃 하고 서버와의 접속을 종료 합니다.
별도 인자가 없습니다.

query: query 메소드를 통해 xingAPI의 XASession의 계좌조회 관련 API, XAQuery의 조회TR의 모든 기능을 통합하여 제공합니다.
query 메소드 인자 목록:
trcode(str): 사용하고자하는 조회TR 코드 또는 API코드(별도 trcode.txt 파일 참조)
args=None(trcode 별 상이): 조회TR 또는 API에 해당하는 인자 입력

subscribe: xingAPI의 XAReal에서 제공하는 실시간 TR을 제공합니다.
subscribe 메소드 인자 목록:
trcode(str): 사용하고자하는 실시간TR 코드(별도 trcode.txt 파일 참조)
args(trcode 별 상이): trcode에 입력된 실시간TR에 해당하는 인자
queue(Queue): 실시간TR 구독(subscribe)요청 이 후 해당 실시간TR의 데이터가 실시간으로 쌓일 queue

unsubscribe: 구독(subscribe)요청 하였던 실시간TR의 구독을 취소하는 기능을 제공합니다.
unsubscribe 메소드 인자 목록:
trcode(str): 구독요청을 취소할 실시간TR의 trcode
args(trcode 별 상이): 구독요청을 취소할 실시간TR의 인자
queue(Queue): 구독요청을 취소할 실시간TR의 queue


--------- class DBUtil ---------
DBUtil 클래스 개요:
sqlite3를 이용하여 조회TR의 결과를 기록할 수 있는 테이블을 자동으로 생성하고, 이 테이블에 조회TR의 결과를 자동으로 insert할 수 있는 static 메소드를 제공합니다.

DBUtil 클래스 제공 스태틱 메소드:

create_table: sqlite3의 테이블을 생성하는 기능을 제공 합니다.
create_table 메소드 인자 목록:
cursor(cursor of sqlite3): 테이블을 생성할 sqlite3의 cursor
table_name(str): 테이블 이름
column_names(list of str): 컬럼 이름 리스트
types(list of str): 각 컬럼의 데이터 타입('TEXT', 'int', 'REAL')
key_names(list of str) = None: 컬럼 중 primary key 로 사용 할 컬럼 리스트
index_names(list of str) = None: 컬럼 중 index를 생성 하고자 하는 컬럼 리스트

create_table_for_outblock: trcode의 결과를 기록할 수 있는 sqlite3의 테이블을 생성하는 기능을 제공합니다.
cursor(cursor of sqlite3): sqlite3의 cursor
table_name(str): 테이블을 생성할 sqlite3의 cursor
tr_code(str): trcode
outblock_name(str): TR조회의 결과 중 테이블에 기록할 outblock의 이름
key_names(list of str) = None: 컬럼 중 primary key 로 사용 할 컬럼 리스트
index_names(list of str) = None: 컬럼 중 index를 생성 하고자 하는 컬럼 리스트

insert_for_outblock: create_table_for_outblock메소드를 이용하여 생성한 테이블에 TR조회 결과의 outblock을 insert하는 기능을 제공합니다.
cursor(cursor of sqlite3): sqlite3의 cursor
table_name(str): 테이블 이름
outblocks(outblock(dict) or list of outblock(dict)): TR조회의 결과 outblock 또는 outblick list
place_flag = False: 동일한 데이터가 있을 경우 덮어 쓸 지 유무(True: 덮어 씀, False: 무시)